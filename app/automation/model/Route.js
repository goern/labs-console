/**
 * Red Hat Open Innovation Labs API
 * A generic model to support automation at all levels of the application and infrastructure lifecycle.
 *
 * OpenAPI spec version: 0.3.0-alpha
 * Contact: rhc-open-innovation-labs@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Service'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Service'));
  } else {
    // Browser globals (root is window)
    if (!root.RedHatOpenInnovationLabsApi) {
      root.RedHatOpenInnovationLabsApi = {};
    }
    root.RedHatOpenInnovationLabsApi.Route = factory(root.RedHatOpenInnovationLabsApi.ApiClient, root.RedHatOpenInnovationLabsApi.Service);
  }
}(this, function(ApiClient, Service) {
  'use strict';




  /**
   * The Route model module.
   * @module model/Route
   * @version 0.3.0-alpha
   */

  /**
   * Constructs a new <code>Route</code>.
   * @alias module:model/Route
   * @class
   * @param routeType {module:model/Route.RouteTypeEnum} 
   */
  var exports = function(routeType) {
    var _this = this;



    _this['route_type'] = routeType;



  };

  /**
   * Constructs a <code>Route</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Route} obj Optional instance to populate.
   * @return {module:model/Route} The populated <code>Route</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('route_type')) {
        obj['route_type'] = ApiClient.convertToType(data['route_type'], 'String');
      }
      if (data.hasOwnProperty('hostname')) {
        obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
      }
      if (data.hasOwnProperty('port')) {
        obj['port'] = ApiClient.convertToType(data['port'], 'Number');
      }
      if (data.hasOwnProperty('service')) {
        obj['service'] = Service.constructFromObject(data['service']);
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/Route.RouteTypeEnum} route_type
   */
  exports.prototype['route_type'] = undefined;
  /**
   * @member {String} hostname
   */
  exports.prototype['hostname'] = undefined;
  /**
   * @member {Number} port
   */
  exports.prototype['port'] = undefined;
  /**
   * @member {module:model/Service} service
   */
  exports.prototype['service'] = undefined;


  /**
   * Allowed values for the <code>route_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RouteTypeEnum = {
    /**
     * value: "edge"
     * @const
     */
    "edge": "edge",
    /**
     * value: "passthrough"
     * @const
     */
    "passthrough": "passthrough",
    /**
     * value: "reencrypt"
     * @const
     */
    "reencrypt": "reencrypt",
    /**
     * value: "default"
     * @const
     */
    "default": "default"  };


  return exports;
}));


